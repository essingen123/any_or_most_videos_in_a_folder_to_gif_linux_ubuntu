[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "platform",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "platform",
        "description": "platform",
        "detail": "platform",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "generate_readme",
        "kind": 2,
        "importPath": "READMEmd_gen",
        "description": "READMEmd_gen",
        "peekOfCode": "def generate_readme():\n    print(\"ðŸ“„ Generating README.md...\")\n    readme = \"# Video to GIF Converter ðŸ“¹\\n\"\n    readme += \"==========================\\n\\n\"\n    readme += \"A simple script to convert videos to GIFs using ffmpeg. ðŸ¤–\\n\\n\"\n    readme += \"## Installation ðŸ“¦\\n\"\n    readme += \"---------------\\n\\n\"\n    readme += \"1. Clone this repository to your local machine.\\n\"\n    readme += \"2. Run the script using `python3 vid_gif_converter.py`.\\n\"\n    readme += \"3. Follow the prompts to install ffmpeg and the script as a command.\\n\\n\"",
        "detail": "READMEmd_gen",
        "documentation": {}
    },
    {
        "label": "install_ffmpeg",
        "kind": 2,
        "importPath": "vid2gif_converter",
        "description": "vid2gif_converter",
        "peekOfCode": "def install_ffmpeg():\n    \"\"\"Install ffmpeg on the system\"\"\"\n    logging.info(\"Installing ffmpeg...\")\n    if platform.system() == \"Linux\":\n        package_managers = [\n            ['sudo', 'apt-get', 'install', 'ffmpeg'],\n            ['sudo', 'yum', 'install', 'ffmpeg'],\n            ['sudo', 'pacman', '-S', 'ffmpeg'],\n            ['sudo', 'zypper', 'install', 'ffmpeg']\n        ]",
        "detail": "vid2gif_converter",
        "documentation": {}
    },
    {
        "label": "install_script",
        "kind": 2,
        "importPath": "vid2gif_converter",
        "description": "vid2gif_converter",
        "peekOfCode": "def install_script():\n    \"\"\"Install the script as a command\"\"\"\n    logging.info(\"Installing script as command...\")\n    script_name = 'vid_gif_converter'\n    script_path = Path(__file__).resolve()\n    if platform.system() == \"Linux\" or platform.system() == \"Darwin\":\n        try:\n            subprocess.run(['sudo', 'cp', str(script_path), '/usr/local/bin/' + script_name], check=True)\n            subprocess.run(['sudo', 'chmod', '+x', '/usr/local/bin/' + script_name], check=True)\n            logging.info(f\"Installed {script_name} command successfully!\")",
        "detail": "vid2gif_converter",
        "documentation": {}
    },
    {
        "label": "convert_videos_to_gifs",
        "kind": 2,
        "importPath": "vid2gif_converter",
        "description": "vid2gif_converter",
        "peekOfCode": "def convert_videos_to_gifs(output_dir):\n    print(\"ðŸ”„ Converting videos to GIFs...\")\n    for f in os.listdir():\n        if f.lower().endswith(('.mp4', '.webm', '.mkv', '.avi', '.mov', '.wmv', '.flv')):\n            try:\n                output_file = os.path.join(output_dir, os.path.splitext(f)[0] + '.gif')\n                subprocess.run(['ffmpeg', '-i', f, '-vf', 'fps=10', '-r', '10', output_file])\n                print(f\"Converted {f} to GIF successfully! ðŸŽ‰\")\n            except:\n                print(f\"Error converting {f} to GIF. Skipping...\")",
        "detail": "vid2gif_converter",
        "documentation": {}
    }
]